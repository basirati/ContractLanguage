package NewLanguage.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.intentions.IntentionExecutable;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collections;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.intentions.IntentionDescriptor;

public class toggleCheckByContract_Intention implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;

  public toggleCheckByContract_Intention() {
  }

  public String getConcept() {
    return "NewLanguage.structure.VerifiableFunctionCall";
  }

  public String getPresentation() {
    return "toggleCheckByContract";
  }

  public String getPersistentStateKey() {
    return "NewLanguage.intentions.toggleCheckByContract_Intention";
  }

  public String getLanguageFqName() {
    return "NewLanguage";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    return true;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:7333a1b7-8a8d-4366-b9c4-2eba12a838c1(NewLanguage.intentions)", "1920587863155177197");
  }

  public boolean isSurroundWith() {
    return false;
  }

  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new toggleCheckByContract_Intention.IntentionImplementation());
    }
    return myCachedExecutable;
  }

  public class IntentionImplementation implements IntentionExecutable {
    public IntentionImplementation() {
    }

    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Toggle Check by Contract";
    }

    public void execute(final SNode node, final EditorContext editorContext) {
      if (AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute("NewLanguage.structure.VerifiableFunctionCallCheckAttribute")) != null) {
        SNodeOperations.deleteNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute("NewLanguage.structure.VerifiableFunctionCallCheckAttribute")));

      } else {
        AttributeOperations.createAndSetAttrbiute(node, new IAttributeDescriptor.NodeAttribute("NewLanguage.structure.VerifiableFunctionCallCheckAttribute"), "NewLanguage.structure.VerifiableFunctionCallCheckAttribute");
      }
    }

    public IntentionDescriptor getDescriptor() {
      return toggleCheckByContract_Intention.this;
    }
  }
}
